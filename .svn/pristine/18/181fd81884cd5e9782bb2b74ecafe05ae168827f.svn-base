package team2.service;


/**
*
* @author 김성진
* @history '23.02.07
* 내용
* 		1. 카드 : 검정, 흰색 카드에 따른 조커(-1), 0~12씩 생성
* 		2. handout() : 카드 뽑기 (2인 : 4장, 4인 : 3장씩) 
* 		3. sort() : 뽑은 카드에 대한 정렬(검정이 흰색보다 우선, 숫자에 대한 오름차순, 조커는 플레이어 마음)
*
*/
import team2.vo.Card;

import java.util.*;

import static team2.Utils.nextInt;

public class Deck {
//  private ArrayList<Card> gaveOut = new ArrayList<>(); // 테스트용
  private ArrayList<Integer> whiteValues = new ArrayList<>(List.of(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11));
  private ArrayList<Integer> blackValues = new ArrayList<>(List.of(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11));

  // 카드 나눠주기 (한장)
  public Card handOut() {
      System.out.println("카드 색을 골라주세요");
      int color = nextInt("0 : 검정색  1 : 흰색");
      ArrayList<Integer> tmp = color == 0 ? blackValues : whiteValues;
      int num = (int) (Math.random() * tmp.size());
      Card card = new Card(color == 0 ? "검정색" : "흰색", tmp.remove(num));
      return card;
  }

  // 카드 정렬
  public ArrayList<Card> sort(ArrayList<Card> cards) {
      Collections.sort(cards, new Comparator<Card>() {
          @Override
          public int compare(Card o1, Card o2) {
              if (o1.getValue() == o2.getValue()) {
                  return o1.getColor().compareTo(o2.getColor());
              }
              return o1.getValue() - o2.getValue();
          }
      });
      return cards;
  }
}
