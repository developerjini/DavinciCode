package team2.service;

/**
 * 
 * 게임판에 대한 메서드 작성
 * 
 * 내용
 * 		1. gamestart() : 게임플레이어 선정(2인, 4인)
 * 		2. gameend() : 게임 종료
 * 		3. order() : 플레이어에 대한 랜덤값에 의한 순서 정하기
 *		4. rank() : 게임 종료에 따른 플레이어 순위 표시
 *
 * @param
 *   1. int players 
 *   2. String name
 * @return
 *   1. players 수에 대한 게임진행, 게임인원선정, 게임순서(랜덤값)
 *   2. name 사용자가 원하는 게임플레이어 이름 설정
 * 
 * 
 * @author 김성진
 * @since 1.0
 * @history '23.02.07
 *
 */


import team2.vo.Player;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import static team2.Utils.*;

public class BoardServiceImpl implements BoardService{
    private int playerNum;
    ArrayList<Integer> orderNum = new ArrayList<>();
    static ArrayList<Player> players = new ArrayList<>();

    static ArrayList<Player> playerRank = new ArrayList<>();

    public ArrayList<Player> getPlayers() {
        return players;
    }

    public int getPlayerNum() {
        return playerNum;
    }

    public void setPlayerNum(int players) {
        this.playerNum = players;
    }

    public ArrayList<Player> getPlayerRank() {
        return playerRank;
    }

    public void addPlayerRank(Player player) {
        playerRank.add(player);
    }

    public void playerRegister() {
        String name = nextLine("플레이어 이름을 입력하세요 > ");
        Player player = new Player(name);
        players.add(player);
    }

    public Player findBy(String name) {
        Player player = null;
        for (int i = 0; i < players.size(); i++) {
            if (players.get(i).getName().equals(name)) {
                player = players.get(i);
                break;
            }
        }
        return player;
    }

    @Override
    public void gameStart() {
        int players = nextInt("몇명이 플레이하겠습니까? 1 : 2인 | 2 : 4인");
        setPlayerNum(players * 2);

        switch (players) {
            case 1 :
                System.out.println("2인 게임시작");
                break;
            case 2:
                System.out.println("4인 게임시작");
                break;
            default:
                System.out.println("범위 내의 숫자를 입력하세요(1 ~ 2)");
        }
    }

    @Override
    public void gameEnd() {
        System.out.println("게임을 종료합니다");
        System.exit(0);
    }

    @Override
    public String order(int players) {
        System.out.println("주사위를 굴려 플레이어 순서를 정합니다");
        orderNum = new ArrayList<>();

        return "player" + (orderNum.indexOf(Collections.max(orderNum))+ 1) + "부터 시작합니다!";
    }

    @Override
    public void rank() {
        Collections.reverse(playerRank);
        System.out.println("====순위====");
        for (Player player : playerRank) {
            System.out.println(player);
        }
    }

    public void failCheck() {
        for (Player player : getPlayers()) {
            List<Boolean> statusList = new ArrayList<>();
            for (int k = 0; k < player.getCard().size(); k ++) { // 플레이어의 모든 카드들
                statusList.add(player.getCard().get(k).getStatus());
            }

            if (!statusList.contains(false)) {
                addPlayerRank(player);
                getPlayers().remove(player);
            }
        }
    }

    public void endCheck() {
        if (getPlayers().size() == 1) {
            addPlayerRank(getPlayers().get(0));
            rank();
            gameEnd();
        }
    }
}

