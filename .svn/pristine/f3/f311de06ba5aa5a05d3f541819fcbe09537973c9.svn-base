package team2;
/**

 * @내용
 * 		1. 시작화면 구성
 * 		2. 게임 시작과 종료 외에는 사용자 입력값 x
 * 		3. 
 * 
 * @author 김성진
 * @since 1.0
 * @histroy '23.2.6
 * 
 * 
 */

import team2.service.BoardServiceImpl;
import team2.service.Deck;
import team2.service.PlayerServiceImpl;
import team2.vo.Player;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Objects;

import static team2.Utils.*;

//게임시작 화면 출력
public class Main {
    public static void main(String[] args) throws Exception {
        BoardServiceImpl board = new BoardServiceImpl();
        PlayerServiceImpl play = new PlayerServiceImpl();
        Deck deck = new Deck();

        System.out.println("\r\n"
                + "______                _               _      _   _____             _       \r\n"
                + "|  _  \\              (_)             | |    (_) /  __ \\           | |      \r\n"
                + "| | | |  __ _ __   __ _  _ __    ___ | |__   _  | /  \\/  ___    __| |  ___ \r\n"
                + "| | | | / _` |\\ \\ / /| || '_ \\  / __|| '_ \\ | | | |     / _ \\  / _` | / _ \\\r\n"
                + "| |/ / | (_| | \\ V / | || | | || (__ | | | || | | \\__/\\| (_) || (_| ||  __/\r\n"
                + "|___/   \\__,_|  \\_/  |_||_| |_| \\___||_| |_||_|  \\____/ \\___/  \\__,_| \\___|\r\n"
                + "                                                                      \r\n"
                + "");

        System.out.println("다빈치 코드 게임에 오신것을 환영합니다.");
        System.out.println("게임을 시작하시겠습니까?");

        int input = Utils.nextInt("1. 게임시작  2. 게임종료");
        switch (input) {
            case 1:  // 게임시작
                board.gameStart();
                break;
            case 2: // 게임종료
                board.gameEnd();
                break;
            default:
                System.out.println("범위 내의 숫자를 입력하세요(1 ~ 2)");
                break;
        }

        // 플레이어 순서
        for (int i = 0; i < board.getPlayerNum(); i++) {
            board.playerRegister();
            board.getPlayers().get(i).order = ((int) (Math.random() * Integer.MAX_VALUE));
        }

        Collections.sort(board.getPlayers());
        for (int i = 0; i < board.getPlayerNum(); i++) {
            System.out.println((i + 1) + "번 순서는 " + board.getPlayers().get(i).getName() + "입니다.");
        }

        // 순서대로 게임 시작
        int turn = 0;
        for (int i = 0; ; i++) {
            Player p = board.getPlayers().get(i % board.getPlayerNum());
            System.out.println(p.getName() + "님의 차례입니다. 엔터키를 입력하세요");
            nextLine("");

            if (turn / board.getPlayerNum() < 1) {
                System.out.println("시작패를 뽑아주세요");

                int startCard = board.getPlayerNum() == 2 ? 4 : 3;

                for (int j = 0; j < startCard; j++) {
                    p.getCard(deck.handOut());
                }

                System.out.print("내 카드 [");
                for (int j = 0; j < p.getCard().size(); j++) {
                    System.out.print(p.getCard().get(j).myCard());
                    if (j < p.getCard().size() - 1) System.out.print(", ");
                    else System.out.println("]");
                }

            } else {
                if (turn / board.getPlayerNum() > 1) {
                    p.getCard(deck.handOut());
                    p.getCard();
                }

                for (int j = 0; j < board.getPlayerNum(); j++) {
                    if (board.getPlayers().get(j) != p) {
                        System.out.print(board.getPlayers().get(j) + " 의 카드 ");
                        System.out.println(board.getPlayers().get(j).getCard());
                    }
                }

                System.out.print("내 카드 [");
                for (int j = 0; j < p.getCard().size(); j++) {
                    System.out.print(p.getCard().get(j).myCard());
                    if (j < p.getCard().size() - 1) System.out.print(", ");
                    else System.out.println("]");
                }

                // 2인일 때 3번째 질문부터 누구의 카드를 맞출지 나오지 않음
                for (int j = 0; j < board.getPlayerNum(); j++) {
                    if (Objects.equals(board.getPlayers().get(j).getName(), p.getName())) continue;
                    System.out.print(j + " : " + board.getPlayers().get(j).getName() + "\t");
                }

                while (board.getPlayers().size() == 1 || play.adjust()) {
                    for (int j = 0; j < board.getPlayerNum(); j++) {
                        if (Objects.equals(board.getPlayers().get(j).getName(), p.getName())) continue;
                        System.out.print(j + " : " + board.getPlayers().get(j).getName() + "\t");
                    }
                }
            }
            turn++;
        }
    }
}